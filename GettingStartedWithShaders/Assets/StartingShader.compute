// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

float Resolution;

struct Pixel {
    float2 position;
    float3 color;
    uint energy;
}
uint count;

RWStructuredBuffer<Pixel> Pixels;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
    if(id.x >= count ) {
        return;
    }
    Pixel p = Pixels[id.x];
    
    //Draw Pixel On Texture
    int x = (int)p.position.x;
    int y = (int)p.position.y;
    Result[x,y] = p.color;
}
